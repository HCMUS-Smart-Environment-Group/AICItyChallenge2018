+ echo Logging output to experiments/logs/res101_car_track1_train__res101.txt.2018-04-01_23-44-57
Logging output to experiments/logs/res101_car_track1_train__res101.txt.2018-04-01_23-44-57
+ set +x
+ '[' '!' -f output/res101/car_track1_train/default/res101_faster_rcnn_iter_11000.ckpt.index ']'
+ [[ ! -z '' ]]
+ CUDA_VISIBLE_DEVICES=0
+ time python ./tools/trainval_net.py --weight data/imagenet_weights/res101.ckpt --imdb car_track1_train --imdbval car_track1_test --iters 11000 --cfg experiments/cfgs/res101.yml --net res101 --set ANCHOR_SCALES '[4,8,16,32]' ANCHOR_RATIOS '[0.5,1,2]' TRAIN.STEPSIZE '[1000]'
Called with args:
Namespace(cfg_file='experiments/cfgs/res101.yml', imdb_name='car_track1_train', imdbval_name='car_track1_test', max_iters=11000, net='res101', set_cfgs=['ANCHOR_SCALES', '[4,8,16,32]', 'ANCHOR_RATIOS', '[0.5,1,2]', 'TRAIN.STEPSIZE', '[1000]'], tag=None, weight='data/imagenet_weights/res101.ckpt')
Using config:
{'ANCHOR_RATIOS': [0.5, 1, 2],
 'ANCHOR_SCALES': [4, 8, 16, 32],
 'DATA_DIR': '/media/ad/DATA/aicitychallenge/tf-faster-rcnn/data',
 'EXP_DIR': 'res101',
 'MATLAB': 'matlab',
 'MOBILENET': {'DEPTH_MULTIPLIER': 1.0,
               'FIXED_LAYERS': 5,
               'REGU_DEPTH': False,
               'WEIGHT_DECAY': 4e-05},
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'RESNET': {'FIXED_BLOCKS': 1, 'MAX_POOL': False},
 'RNG_SEED': 3,
 'ROOT_DIR': '/media/ad/DATA/aicitychallenge/tf-faster-rcnn',
 'RPN_CHANNELS': 512,
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'MODE': 'nms',
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'gt',
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'RPN_TOP_N': 5000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': False,
           'BATCH_SIZE': 256,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'BIAS_DECAY': False,
           'DISPLAY': 20,
           'DOUBLE_BIAS': False,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'GAMMA': 0.1,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'LEARNING_RATE': 0.001,
           'MAX_SIZE': 1000,
           'MOMENTUM': 0.9,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_ITERS': 5000,
           'SNAPSHOT_KEPT': 3,
           'SNAPSHOT_PREFIX': 'res101_faster_rcnn',
           'STEPSIZE': [1000],
           'SUMMARY_INTERVAL': 180,
           'TRUNCATED': False,
           'USE_ALL_GT': True,
           'USE_FLIPPED': True,
           'USE_GT': False,
           'WEIGHT_DECAY': 0.0001},
 'USE_GPU_NMS': True}
Loaded dataset `car_track1_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
car_track1_train gt roidb loaded from /media/ad/DATA/aicitychallenge/tf-faster-rcnn/data/cache/car_track1_train_gt_roidb.pkl
done
Preparing training data...
done
1554 roidb entries
Output will be saved to `/media/ad/DATA/aicitychallenge/tf-faster-rcnn/output/res101/car_track1_train/default`
TensorFlow summaries will be saved to `/media/ad/DATA/aicitychallenge/tf-faster-rcnn/tensorboard/res101/car_track1_train/default`
Loaded dataset `car_track1_test` for training
Set proposal method: gt
Preparing training data...
car_track1_test gt roidb loaded from /media/ad/DATA/aicitychallenge/tf-faster-rcnn/data/cache/car_track1_test_gt_roidb.pkl
done
138 validation roidb entries
Filtered 0 roidb entries: 1554 -> 1554
Filtered 0 roidb entries: 138 -> 138
2018-04-01 23:45:07.537052: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2018-04-01 23:45:07.662203: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2018-04-01 23:45:07.662455: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1212] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.6575
pciBusID: 0000:01:00.0
totalMemory: 10.91GiB freeMemory: 10.43GiB
2018-04-01 23:45:07.662468: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1312] Adding visible gpu devices: 0
2018-04-01 23:45:07.819060: I tensorflow/core/common_runtime/gpu/gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10100 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
Solving...
/home/ad/tensorflow-r1.6/local/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.py:98: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.
  "Converting sparse IndexedSlices to a dense Tensor of unknown shape. "
Restoring model snapshots from /media/ad/DATA/aicitychallenge/tf-faster-rcnn/output/res101/car_track1_train/default/res101_faster_rcnn_iter_10000.ckpt
Restored.
iter: 10020 / 11000, total loss: 0.512972
 >>> rpn_loss_cls: 0.004942
 >>> rpn_loss_box: 0.011743
 >>> loss_cls: 0.067341
 >>> loss_box: 0.047439
 >>> lr: 0.000100
speed: 0.393s / iter
iter: 10040 / 11000, total loss: 0.475623
 >>> rpn_loss_cls: 0.016443
 >>> rpn_loss_box: 0.009798
 >>> loss_cls: 0.040725
 >>> loss_box: 0.027150
 >>> lr: 0.000100
speed: 0.347s / iter
iter: 10060 / 11000, total loss: 0.511343
 >>> rpn_loss_cls: 0.009276
 >>> rpn_loss_box: 0.011630
 >>> loss_cls: 0.032057
 >>> loss_box: 0.076874
 >>> lr: 0.000100
speed: 0.330s / iter
iter: 10080 / 11000, total loss: 0.619542
 >>> rpn_loss_cls: 0.068952
 >>> rpn_loss_box: 0.007306
 >>> loss_cls: 0.053612
 >>> loss_box: 0.108167
 >>> lr: 0.000100
speed: 0.322s / iter
iter: 10100 / 11000, total loss: 0.483627
 >>> rpn_loss_cls: 0.023406
 >>> rpn_loss_box: 0.009070
 >>> loss_cls: 0.029008
 >>> loss_box: 0.040640
 >>> lr: 0.000100
speed: 0.317s / iter
iter: 10120 / 11000, total loss: 0.490313
 >>> rpn_loss_cls: 0.008430
 >>> rpn_loss_box: 0.015562
 >>> loss_cls: 0.024599
 >>> loss_box: 0.060221
 >>> lr: 0.000100
speed: 0.314s / iter
iter: 10140 / 11000, total loss: 0.393478
 >>> rpn_loss_cls: 0.003574
 >>> rpn_loss_box: 0.001388
 >>> loss_cls: 0.001260
 >>> loss_box: 0.005757
 >>> lr: 0.000100
speed: 0.312s / iter
iter: 10160 / 11000, total loss: 0.412518
 >>> rpn_loss_cls: 0.007676
 >>> rpn_loss_box: 0.002769
 >>> loss_cls: 0.014466
 >>> loss_box: 0.006107
 >>> lr: 0.000100
speed: 0.309s / iter
iter: 10180 / 11000, total loss: 0.471494
 >>> rpn_loss_cls: 0.004966
 >>> rpn_loss_box: 0.008101
 >>> loss_cls: 0.031859
 >>> loss_box: 0.045070
 >>> lr: 0.000100
speed: 0.308s / iter
iter: 10200 / 11000, total loss: 0.557173
 >>> rpn_loss_cls: 0.003455
 >>> rpn_loss_box: 0.024557
 >>> loss_cls: 0.043175
 >>> loss_box: 0.104490
 >>> lr: 0.000100
speed: 0.306s / iter
iter: 10220 / 11000, total loss: 0.542031
 >>> rpn_loss_cls: 0.008273
 >>> rpn_loss_box: 0.013520
 >>> loss_cls: 0.066635
 >>> loss_box: 0.072109
 >>> lr: 0.000100
speed: 0.305s / iter
iter: 10240 / 11000, total loss: 0.636194
 >>> rpn_loss_cls: 0.020818
 >>> rpn_loss_box: 0.042628
 >>> loss_cls: 0.073001
 >>> loss_box: 0.118253
 >>> lr: 0.000100
speed: 0.305s / iter
iter: 10260 / 11000, total loss: 0.520167
 >>> rpn_loss_cls: 0.040916
 >>> rpn_loss_box: 0.008660
 >>> loss_cls: 0.046347
 >>> loss_box: 0.042753
 >>> lr: 0.000100
speed: 0.304s / iter
iter: 10280 / 11000, total loss: 0.496928
 >>> rpn_loss_cls: 0.006290
 >>> rpn_loss_box: 0.009283
 >>> loss_cls: 0.037963
 >>> loss_box: 0.061901
 >>> lr: 0.000100
speed: 0.303s / iter
iter: 10300 / 11000, total loss: 0.491126
 >>> rpn_loss_cls: 0.031079
 >>> rpn_loss_box: 0.008356
 >>> loss_cls: 0.036555
 >>> loss_box: 0.033646
 >>> lr: 0.000100
speed: 0.302s / iter
iter: 10320 / 11000, total loss: 0.600019
 >>> rpn_loss_cls: 0.032843
 >>> rpn_loss_box: 0.017225
 >>> loss_cls: 0.105574
 >>> loss_box: 0.062889
 >>> lr: 0.000100
speed: 0.302s / iter
iter: 10340 / 11000, total loss: 0.499984
 >>> rpn_loss_cls: 0.006343
 >>> rpn_loss_box: 0.008998
 >>> loss_cls: 0.050082
 >>> loss_box: 0.053074
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10360 / 11000, total loss: 0.540455
 >>> rpn_loss_cls: 0.031129
 >>> rpn_loss_box: 0.011362
 >>> loss_cls: 0.054845
 >>> loss_box: 0.061634
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10380 / 11000, total loss: 0.432513
 >>> rpn_loss_cls: 0.001515
 >>> rpn_loss_box: 0.007082
 >>> loss_cls: 0.013867
 >>> loss_box: 0.028564
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10400 / 11000, total loss: 0.527305
 >>> rpn_loss_cls: 0.014387
 >>> rpn_loss_box: 0.011555
 >>> loss_cls: 0.050218
 >>> loss_box: 0.069662
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10420 / 11000, total loss: 0.399494
 >>> rpn_loss_cls: 0.000331
 >>> rpn_loss_box: 0.001245
 >>> loss_cls: 0.013201
 >>> loss_box: 0.003236
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10440 / 11000, total loss: 0.434822
 >>> rpn_loss_cls: 0.002181
 >>> rpn_loss_box: 0.007782
 >>> loss_cls: 0.017772
 >>> loss_box: 0.025606
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10460 / 11000, total loss: 0.548193
 >>> rpn_loss_cls: 0.026756
 >>> rpn_loss_box: 0.014766
 >>> loss_cls: 0.036596
 >>> loss_box: 0.088597
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10480 / 11000, total loss: 0.428635
 >>> rpn_loss_cls: 0.008728
 >>> rpn_loss_box: 0.004431
 >>> loss_cls: 0.020994
 >>> loss_box: 0.013004
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10500 / 11000, total loss: 0.618451
 >>> rpn_loss_cls: 0.004010
 >>> rpn_loss_box: 0.007773
 >>> loss_cls: 0.109014
 >>> loss_box: 0.116178
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10520 / 11000, total loss: 0.568227
 >>> rpn_loss_cls: 0.034220
 >>> rpn_loss_box: 0.013994
 >>> loss_cls: 0.055306
 >>> loss_box: 0.083231
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10540 / 11000, total loss: 0.489686
 >>> rpn_loss_cls: 0.004613
 >>> rpn_loss_box: 0.010677
 >>> loss_cls: 0.042357
 >>> loss_box: 0.050566
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10560 / 11000, total loss: 0.559827
 >>> rpn_loss_cls: 0.008763
 >>> rpn_loss_box: 0.016559
 >>> loss_cls: 0.051772
 >>> loss_box: 0.101261
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10580 / 11000, total loss: 0.404295
 >>> rpn_loss_cls: 0.001280
 >>> rpn_loss_box: 0.003725
 >>> loss_cls: 0.004276
 >>> loss_box: 0.013543
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10600 / 11000, total loss: 0.535704
 >>> rpn_loss_cls: 0.011388
 >>> rpn_loss_box: 0.010585
 >>> loss_cls: 0.049037
 >>> loss_box: 0.083225
 >>> lr: 0.000100
speed: 0.299s / iter
iter: 10620 / 11000, total loss: 0.486174
 >>> rpn_loss_cls: 0.012943
 >>> rpn_loss_box: 0.006478
 >>> loss_cls: 0.032837
 >>> loss_box: 0.052448
 >>> lr: 0.000100
speed: 0.302s / iter
iter: 10640 / 11000, total loss: 0.457965
 >>> rpn_loss_cls: 0.003351
 >>> rpn_loss_box: 0.006396
 >>> loss_cls: 0.022254
 >>> loss_box: 0.044497
 >>> lr: 0.000100
speed: 0.302s / iter
iter: 10660 / 11000, total loss: 0.566577
 >>> rpn_loss_cls: 0.033073
 >>> rpn_loss_box: 0.020250
 >>> loss_cls: 0.060875
 >>> loss_box: 0.070915
 >>> lr: 0.000100
speed: 0.302s / iter
iter: 10680 / 11000, total loss: 0.634109
 >>> rpn_loss_cls: 0.020891
 >>> rpn_loss_box: 0.040417
 >>> loss_cls: 0.085294
 >>> loss_box: 0.106043
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10700 / 11000, total loss: 0.424213
 >>> rpn_loss_cls: 0.009428
 >>> rpn_loss_box: 0.003283
 >>> loss_cls: 0.016199
 >>> loss_box: 0.013841
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10720 / 11000, total loss: 0.519280
 >>> rpn_loss_cls: 0.005312
 >>> rpn_loss_box: 0.014020
 >>> loss_cls: 0.045111
 >>> loss_box: 0.073375
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10740 / 11000, total loss: 0.418985
 >>> rpn_loss_cls: 0.000912
 >>> rpn_loss_box: 0.005936
 >>> loss_cls: 0.004180
 >>> loss_box: 0.026497
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10760 / 11000, total loss: 0.481490
 >>> rpn_loss_cls: 0.011739
 >>> rpn_loss_box: 0.013738
 >>> loss_cls: 0.031128
 >>> loss_box: 0.043426
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10780 / 11000, total loss: 0.499361
 >>> rpn_loss_cls: 0.023063
 >>> rpn_loss_box: 0.003566
 >>> loss_cls: 0.066594
 >>> loss_box: 0.024680
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10800 / 11000, total loss: 0.580364
 >>> rpn_loss_cls: 0.052222
 >>> rpn_loss_box: 0.009134
 >>> loss_cls: 0.098262
 >>> loss_box: 0.039290
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10820 / 11000, total loss: 0.468638
 >>> rpn_loss_cls: 0.011026
 >>> rpn_loss_box: 0.005387
 >>> loss_cls: 0.021598
 >>> loss_box: 0.049173
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10840 / 11000, total loss: 0.415170
 >>> rpn_loss_cls: 0.001269
 >>> rpn_loss_box: 0.006084
 >>> loss_cls: 0.006765
 >>> loss_box: 0.019598
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10860 / 11000, total loss: 0.509188
 >>> rpn_loss_cls: 0.016736
 >>> rpn_loss_box: 0.005090
 >>> loss_cls: 0.050447
 >>> loss_box: 0.055464
 >>> lr: 0.000100
speed: 0.301s / iter
iter: 10880 / 11000, total loss: 0.559853
 >>> rpn_loss_cls: 0.026546
 >>> rpn_loss_box: 0.019478
 >>> loss_cls: 0.065617
 >>> loss_box: 0.066763
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10900 / 11000, total loss: 0.484833
 >>> rpn_loss_cls: 0.017538
 >>> rpn_loss_box: 0.006326
 >>> loss_cls: 0.040101
 >>> loss_box: 0.039419
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10920 / 11000, total loss: 0.508322
 >>> rpn_loss_cls: 0.014419
 >>> rpn_loss_box: 0.012426
 >>> loss_cls: 0.049325
 >>> loss_box: 0.050705
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10940 / 11000, total loss: 0.485612
 >>> rpn_loss_cls: 0.007393
 >>> rpn_loss_box: 0.017969
 >>> loss_cls: 0.043885
 >>> loss_box: 0.034919
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10960 / 11000, total loss: 0.571149
 >>> rpn_loss_cls: 0.034202
 >>> rpn_loss_box: 0.008353
 >>> loss_cls: 0.079908
 >>> loss_box: 0.067241
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 10980 / 11000, total loss: 0.504054
 >>> rpn_loss_cls: 0.013915
 >>> rpn_loss_box: 0.007690
 >>> loss_cls: 0.070031
 >>> loss_box: 0.030976
 >>> lr: 0.000100
speed: 0.300s / iter
iter: 11000 / 11000, total loss: 0.463900
 >>> rpn_loss_cls: 0.003694
 >>> rpn_loss_box: 0.004634
 >>> loss_cls: 0.033797
 >>> loss_box: 0.040333
 >>> lr: 0.000100
speed: 0.300s / iter
Wrote snapshot to: /media/ad/DATA/aicitychallenge/tf-faster-rcnn/output/res101/car_track1_train/default/res101_faster_rcnn_iter_11000.ckpt
done solving
173.19user 25.73system 5:19.95elapsed 62%CPU (0avgtext+0avgdata 2836308maxresident)k
829296inputs+0outputs (1major+2337371minor)pagefaults 0swaps
